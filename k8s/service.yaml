apiVersion: v1
kind: Service
metadata:
  name: gliner-api
  namespace: mlops
  labels:
    app: gliner-api
    component: prediction-service
  annotations:
    description: "GLiNER NER Model API Service"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: gliner-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gliner-api-ingress
  namespace: mlops
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
  - host: ner-api.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gliner-api
            port:
              number: 80
  tls:
  - hosts:
    - ner-api.example.com
    secretName: gliner-api-tls
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gliner-api-hpa
  namespace: mlops
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gliner-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120